# =============================================================================
# Nginx Configuration for Patexia Legal AI Chatbot
# 
# This configuration provides:
# - Reverse proxy for FastAPI backend and Gradio frontend
# - WebSocket support for real-time communication
# - Static file serving with optimization
# - SSL/TLS termination and security headers
# - Rate limiting and DDoS protection
# - Load balancing for multiple backend instances
# - Compression and caching for performance
# - Legal document upload handling
# - Security hardening for legal data protection
# =============================================================================

# Main nginx configuration context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker configuration for high-performance legal document processing
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP context configuration
http {
    # =============================================================================
    # MIME TYPES AND CHARSET
    # =============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;
    
    # Additional MIME types for legal documents
    location ~* \.(pdf)$ {
        add_header Content-Type application/pdf;
    }
    
    location ~* \.(docx?)$ {
        add_header Content-Type application/vnd.openxmlformats-officedocument.wordprocessingml.document;
    }

    # =============================================================================
    # LOGGING CONFIGURATION
    # =============================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format legal_audit '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" case_id="$arg_case_id" '
                          'document_id="$arg_document_id" user_id="$arg_user_id"';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # =============================================================================
    # PERFORMANCE AND OPTIMIZATION
    # =============================================================================
    
    # Basic performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Client settings for legal document uploads
    client_max_body_size 100M;
    client_body_buffer_size 16k;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 16k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings for backend communication
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 64k;
    proxy_buffers 8 64k;
    proxy_busy_buffers_size 128k;
    proxy_temp_file_write_size 128k;
    
    # WebSocket proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # =============================================================================
    # COMPRESSION CONFIGURATION
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # =============================================================================
    # SECURITY HEADERS AND SETTINGS
    # =============================================================================
    
    # Security headers map
    map $sent_http_content_type $security_headers {
        default "nosniff";
        ~image/ "nosniff";
        ~font/ "nosniff";
    }
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # =============================================================================
    # UPSTREAM BACKEND SERVERS
    # =============================================================================
    
    # FastAPI backend servers
    upstream backend_api {
        least_conn;
        server app:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add additional backend instances for load balancing
        # server app2:8000 max_fails=3 fail_timeout=30s weight=1;
        # server app3:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check (if nginx-plus)
        # health_check interval=10s fails=3 passes=2;
        
        # Session persistence for WebSocket connections
        ip_hash;
    }
    
    # Gradio frontend servers
    upstream frontend_ui {
        least_conn;
        server frontend:7860 max_fails=3 fail_timeout=30s weight=1;
        # Add additional frontend instances if needed
        # server frontend2:7860 max_fails=3 fail_timeout=30s weight=1;
        
        # Keep connections alive
        keepalive 32;
    }
    
    # Monitoring and admin services
    upstream monitoring {
        server prometheus:9090;
        server grafana:3000;
        server mongo-express:8081;
    }

    # =============================================================================
    # SSL/TLS CONFIGURATION (Production)
    # =============================================================================
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # =============================================================================
    # MAIN SERVER CONFIGURATION
    # =============================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name patexia-legal-ai.local localhost;
        
        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;
        
        # Development: serve directly over HTTP
        root /var/www/html;
        index index.html index.htm;
        
        # =============================================================================
        # SECURITY HEADERS
        # =============================================================================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Development CSP (relaxed for Gradio)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self' ws: wss:; media-src 'self'; object-src 'none'; frame-ancestors 'self';" always;
        
        # Production CSP (stricter)
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' wss:; object-src 'none'; frame-ancestors 'none';" always;

        # =============================================================================
        # RATE LIMITING
        # =============================================================================
        limit_conn perip 20;
        limit_conn perserver 1000;

        # =============================================================================
        # GRADIO FRONTEND PROXY
        # =============================================================================
        location / {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://frontend_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Gradio
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Gradio-specific headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeout settings for large document uploads
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffer settings for file uploads
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # =============================================================================
        # BACKEND API PROXY
        # =============================================================================
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API-specific timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Enable request buffering for API calls
            proxy_request_buffering on;
            proxy_buffering on;
            
            # CORS headers for API access
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # =============================================================================
        # WEBSOCKET ENDPOINTS
        # =============================================================================
        location /ws {
            # WebSocket connection for real-time updates
            proxy_pass http://backend_api/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket-specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # =============================================================================
        # DOCUMENT UPLOAD ENDPOINTS
        # =============================================================================
        location /api/upload {
            limit_req zone=upload burst=5 nodelay;
            
            # Large file upload settings
            client_max_body_size 100M;
            client_body_buffer_size 1M;
            client_body_timeout 300s;
            
            proxy_pass http://backend_api/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload-specific timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for large uploads
            proxy_request_buffering off;
            proxy_buffering off;
            
            # Progress tracking support
            upload_progress legal_uploads 1m;
        }

        # =============================================================================
        # SEARCH ENDPOINTS
        # =============================================================================
        location /api/search {
            limit_req zone=search burst=10 nodelay;
            
            proxy_pass http://backend_api/search;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Search-optimized caching
            proxy_cache search_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_key "$scheme$request_method$host$request_uri$args";
            proxy_cache_bypass $arg_nocache;
            
            # Search-specific headers
            add_header X-Cache-Status $upstream_cache_status;
        }

        # =============================================================================
        # STATIC FILE SERVING
        # =============================================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Gzip static files
            gzip_static on;
            
            # Security for static files
            location ~* \.(js|css)$ {
                add_header Content-Type text/plain;
            }
        }
        
        # Document serving (secure)
        location /documents/ {
            alias /var/www/documents/;
            internal; # Only accessible via X-Accel-Redirect
            
            # Security headers for documents
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "DENY";
            add_header Cache-Control "private, no-cache";
        }

        # =============================================================================
        # MONITORING AND ADMIN ENDPOINTS
        # =============================================================================
        location /admin/ {
            # Restrict admin access by IP
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://monitoring/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Prometheus metrics
        location /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://backend_api/metrics;
            proxy_set_header Host $host;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://backend_api/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # =============================================================================
        # ERROR PAGES
        # =============================================================================
        error_page 400 /error/400.html;
        error_page 401 /error/401.html;
        error_page 403 /error/403.html;
        error_page 404 /error/404.html;
        error_page 500 502 503 504 /error/5xx.html;
        
        location /error/ {
            alias /var/www/error/;
            internal;
        }

        # =============================================================================
        # SECURITY RULES
        # =============================================================================
        
        # Hide nginx version
        server_tokens off;
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block common exploit attempts
        location ~* (roundcube|webmail|email|mail|zimbra) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block SQL injection attempts
        location ~* (union.*select|insert.*into|delete.*from|drop.*table) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # =============================================================================
    # CACHE CONFIGURATION
    # =============================================================================
    proxy_cache_path /var/cache/nginx/search levels=1:2 keys_zone=search_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=24h use_temp_path=off;

    # =============================================================================
    # LOAD BALANCER HEALTH CHECKS
    # =============================================================================
    server {
        listen 8081;
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
        }
    }

    # =============================================================================
    # INCLUDE ADDITIONAL CONFIGURATIONS
    # =============================================================================
    include /etc/nginx/conf.d/*.conf;
}